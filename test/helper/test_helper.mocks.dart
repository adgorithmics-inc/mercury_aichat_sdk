// Mocks generated by Mockito 5.4.4 from annotations
// in mercury_aichat_sdk/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i12;
import 'package:dio/src/dio/dio_for_native.dart' as _i10;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i9;
import 'package:mercury_aichat_sdk/src/chatbot/data_source/chat_local_data_source.dart'
    as _i7;
import 'package:mercury_aichat_sdk/src/chatbot/models/chat_message_response.dart'
    as _i15;
import 'package:mercury_aichat_sdk/src/chatbot/models/chatbot_model.dart'
    as _i16;
import 'package:mercury_aichat_sdk/src/chatbot/repo/chatbot_repo.dart' as _i13;
import 'package:mercury_aichat_sdk/src/chatbot/usecases/create_conversation_usecase.dart'
    as _i17;
import 'package:mercury_aichat_sdk/src/chatbot/usecases/get_messages_usecase.dart'
    as _i18;
import 'package:mercury_aichat_sdk/src/chatbot/usecases/send_message_usecase.dart'
    as _i19;
import 'package:mercury_aichat_sdk/src/resource.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T> extends _i1.SmartFake implements _i6.Response<T> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatLocalDataSource_5 extends _i1.SmartFake
    implements _i7.ChatLocalDataSource {
  _FakeChatLocalDataSource_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResource_6<T1> extends _i1.SmartFake implements _i8.Resource<T1> {
  _FakeResource_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_7 extends _i1.SmartFake
    implements _i9.FlutterSecureStorage {
  _FakeFlutterSecureStorage_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_8 extends _i1.SmartFake implements _i9.IOSOptions {
  _FakeIOSOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_9 extends _i1.SmartFake
    implements _i9.AndroidOptions {
  _FakeAndroidOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_10 extends _i1.SmartFake implements _i9.LinuxOptions {
  _FakeLinuxOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_11 extends _i1.SmartFake
    implements _i9.WindowsOptions {
  _FakeWindowsOptions_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_12 extends _i1.SmartFake implements _i9.WebOptions {
  _FakeWebOptions_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_13 extends _i1.SmartFake implements _i9.MacOsOptions {
  _FakeMacOsOptions_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioForNative].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioForNative extends _i1.Mock implements _i10.DioForNative {
  MockDioForNative() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  _i11.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<dynamic>>);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<_i6.Response<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #queryParameters: queryParameters,
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #queryParameters: queryParameters,
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<dynamic>>);

  @override
  _i11.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> request<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);
}

/// A class which mocks [ChatbotRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatbotRepo extends _i1.Mock implements _i13.ChatbotRepo {
  MockChatbotRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.ChatLocalDataSource get dataSource => (super.noSuchMethod(
        Invocation.getter(#dataSource),
        returnValue: _FakeChatLocalDataSource_5(
          this,
          Invocation.getter(#dataSource),
        ),
      ) as _i7.ChatLocalDataSource);

  @override
  String get sendChatUrl => (super.noSuchMethod(
        Invocation.getter(#sendChatUrl),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#sendChatUrl),
        ),
      ) as String);

  @override
  String get messagesUrl => (super.noSuchMethod(
        Invocation.getter(#messagesUrl),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#messagesUrl),
        ),
      ) as String);

  @override
  String get noConversation => (super.noSuchMethod(
        Invocation.getter(#noConversation),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#noConversation),
        ),
      ) as String);

  @override
  _i11.Future<_i8.Resource<_i15.ChatMessage>> sendMessage(String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [prompt],
        ),
        returnValue: _i11.Future<_i8.Resource<_i15.ChatMessage>>.value(
            _FakeResource_6<_i15.ChatMessage>(
          this,
          Invocation.method(
            #sendMessage,
            [prompt],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i15.ChatMessage>>);

  @override
  _i11.Future<_i8.Resource<_i15.ChatMessageResponse>> getMessages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [],
        ),
        returnValue: _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>.value(
            _FakeResource_6<_i15.ChatMessageResponse>(
          this,
          Invocation.method(
            #getMessages,
            [],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>);

  @override
  _i11.Future<_i8.Resource<_i16.ChatbotModel>> createConversation() =>
      (super.noSuchMethod(
        Invocation.method(
          #createConversation,
          [],
        ),
        returnValue: _i11.Future<_i8.Resource<_i16.ChatbotModel>>.value(
            _FakeResource_6<_i16.ChatbotModel>(
          this,
          Invocation.method(
            #createConversation,
            [],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i16.ChatbotModel>>);

  @override
  _i11.Future<String?> getSavedConversationId() => (super.noSuchMethod(
        Invocation.method(
          #getSavedConversationId,
          [],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);

  @override
  _i11.Future<void> saveConversationId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #saveConversationId,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}

/// A class which mocks [ChatLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatLocalDataSource extends _i1.Mock
    implements _i7.ChatLocalDataSource {
  MockChatLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.FlutterSecureStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFlutterSecureStorage_7(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i9.FlutterSecureStorage);

  @override
  _i11.Future<void> appendMessageHistory(_i15.ChatMessage? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendMessageHistory,
          [data],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i15.ChatMessage>> getMessageHistory() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageHistory,
          [],
        ),
        returnValue:
            _i11.Future<List<_i15.ChatMessage>>.value(<_i15.ChatMessage>[]),
      ) as _i11.Future<List<_i15.ChatMessage>>);

  @override
  _i11.Future<void> setConversationId(
    String? key,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConversationId,
          [
            key,
            id,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<String?> getConversationId(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getConversationId,
          [key],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);
}

/// A class which mocks [CreateConversationUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateConversationUsecase extends _i1.Mock
    implements _i17.CreateConversationUsecase {
  MockCreateConversationUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i8.Resource<_i15.ChatMessageResponse>> invoke() =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>.value(
            _FakeResource_6<_i15.ChatMessageResponse>(
          this,
          Invocation.method(
            #invoke,
            [],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>);
}

/// A class which mocks [GetMessagesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMessagesUsecase extends _i1.Mock
    implements _i18.GetMessagesUsecase {
  MockGetMessagesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i8.Resource<_i15.ChatMessageResponse>> invoke() =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>.value(
            _FakeResource_6<_i15.ChatMessageResponse>(
          this,
          Invocation.method(
            #invoke,
            [],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i15.ChatMessageResponse>>);
}

/// A class which mocks [SendMessageUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendMessageUsecase extends _i1.Mock
    implements _i19.SendMessageUsecase {
  MockSendMessageUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i8.Resource<_i15.ChatMessage>> invoke(String? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [message],
        ),
        returnValue: _i11.Future<_i8.Resource<_i15.ChatMessage>>.value(
            _FakeResource_6<_i15.ChatMessage>(
          this,
          Invocation.method(
            #invoke,
            [message],
          ),
        )),
      ) as _i11.Future<_i8.Resource<_i15.ChatMessage>>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i9.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_8(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i9.IOSOptions);

  @override
  _i9.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_9(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i9.AndroidOptions);

  @override
  _i9.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_10(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i9.LinuxOptions);

  @override
  _i9.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_11(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i9.WindowsOptions);

  @override
  _i9.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_12(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i9.WebOptions);

  @override
  _i9.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_13(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i9.MacOsOptions);

  @override
  _i11.Future<void> write({
    required String? key,
    required String? value,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<String?> read({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);

  @override
  _i11.Future<bool> containsKey({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> delete({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<Map<String, String>> readAll({
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i11.Future<Map<String, String>>);

  @override
  _i11.Future<void> deleteAll({
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}
